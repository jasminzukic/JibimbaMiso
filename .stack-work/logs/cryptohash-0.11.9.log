Configuring cryptohash-0.11.9...
Building cryptohash-0.11.9...
Preprocessing library cryptohash-0.11.9...
[ 1 of 21] Compiling Crypto.Hash.Internal ( Crypto/Hash/Internal.hs, .stack-work/dist/x86_64-linux/Cabal-1.24.0.0_ghcjs/build/Crypto/Hash/Internal.js_o )

Crypto/Hash/Internal.hs:33:1: warning: [-Wredundant-constraints]
    • Redundant constraint: HashAlgorithm h
    • In the type signature for:
           digestToByteString :: HashAlgorithm h => Digest h -> ByteString

Crypto/Hash/Internal.hs:36:1: warning: [-Wredundant-constraints]
    • Redundant constraint: HashAlgorithm h
    • In the type signature for:
           digestToByteStringWitness :: HashAlgorithm h =>
                                        h -> Digest h -> ByteString
[ 2 of 21] Compiling Crypto.Hash.Whirlpool ( Crypto/Hash/Whirlpool.hs, .stack-work/dist/x86_64-linux/Cabal-1.24.0.0_ghcjs/build/Crypto/Hash/Whirlpool.js_o )
[ 3 of 21] Compiling Crypto.Hash.Tiger ( Crypto/Hash/Tiger.hs, .stack-work/dist/x86_64-linux/Cabal-1.24.0.0_ghcjs/build/Crypto/Hash/Tiger.js_o )
[ 4 of 21] Compiling Crypto.Hash.Skein512 ( Crypto/Hash/Skein512.hs, .stack-work/dist/x86_64-linux/Cabal-1.24.0.0_ghcjs/build/Crypto/Hash/Skein512.js_o )

Crypto/Hash/Skein512.hs:53:11: warning: [-Winline-rule-shadowing]
    Rule "hashmany" may never fire
      because rule "Class op foldl" for ‘foldl’ might fire first
    Probable fix: add phase [n] or [~n] to the competing rule

Crypto/Hash/Skein512.hs:54:11: warning: [-Winline-rule-shadowing]
    Rule "hashlazy" may never fire because ‘$’ might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for ‘$’

Crypto/Hash/Skein512.hs:54:11: warning: [-Winline-rule-shadowing]
    Rule "hashlazy" may never fire
      because rule "Class op foldl" for ‘foldl’ might fire first
    Probable fix: add phase [n] or [~n] to the competing rule

Crypto/Hash/Skein512.hs:54:11: warning: [-Winline-rule-shadowing]
    Rule "hashlazy" may never fire
      because ‘L.toChunks’ might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for ‘L.toChunks’
[ 5 of 21] Compiling Crypto.Hash.Skein256 ( Crypto/Hash/Skein256.hs, .stack-work/dist/x86_64-linux/Cabal-1.24.0.0_ghcjs/build/Crypto/Hash/Skein256.js_o )

Crypto/Hash/Skein256.hs:53:11: warning: [-Winline-rule-shadowing]
    Rule "hashmany" may never fire
      because rule "Class op foldl" for ‘foldl’ might fire first
    Probable fix: add phase [n] or [~n] to the competing rule

Crypto/Hash/Skein256.hs:54:11: warning: [-Winline-rule-shadowing]
    Rule "hashlazy" may never fire because ‘$’ might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for ‘$’

Crypto/Hash/Skein256.hs:54:11: warning: [-Winline-rule-shadowing]
    Rule "hashlazy" may never fire
      because rule "Class op foldl" for ‘foldl’ might fire first
    Probable fix: add phase [n] or [~n] to the competing rule

Crypto/Hash/Skein256.hs:54:11: warning: [-Winline-rule-shadowing]
    Rule "hashlazy" may never fire
      because ‘L.toChunks’ might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for ‘L.toChunks’
[ 6 of 21] Compiling Crypto.Hash.RIPEMD160 ( Crypto/Hash/RIPEMD160.hs, .stack-work/dist/x86_64-linux/Cabal-1.24.0.0_ghcjs/build/Crypto/Hash/RIPEMD160.js_o )
[ 7 of 21] Compiling Crypto.Hash.MD5  ( Crypto/Hash/MD5.hs, .stack-work/dist/x86_64-linux/Cabal-1.24.0.0_ghcjs/build/Crypto/Hash/MD5.js_o )
[ 8 of 21] Compiling Crypto.Hash.MD4  ( Crypto/Hash/MD4.hs, .stack-work/dist/x86_64-linux/Cabal-1.24.0.0_ghcjs/build/Crypto/Hash/MD4.js_o )
[ 9 of 21] Compiling Crypto.Hash.MD2  ( Crypto/Hash/MD2.hs, .stack-work/dist/x86_64-linux/Cabal-1.24.0.0_ghcjs/build/Crypto/Hash/MD2.js_o )
[10 of 21] Compiling Crypto.Hash.SHA3 ( Crypto/Hash/SHA3.hs, .stack-work/dist/x86_64-linux/Cabal-1.24.0.0_ghcjs/build/Crypto/Hash/SHA3.js_o )

Crypto/Hash/SHA3.hs:61:11: warning: [-Winline-rule-shadowing]
    Rule "hashmany" may never fire
      because rule "Class op foldl" for ‘foldl’ might fire first
    Probable fix: add phase [n] or [~n] to the competing rule

Crypto/Hash/SHA3.hs:62:11: warning: [-Winline-rule-shadowing]
    Rule "hashlazy" may never fire because ‘$’ might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for ‘$’

Crypto/Hash/SHA3.hs:62:11: warning: [-Winline-rule-shadowing]
    Rule "hashlazy" may never fire
      because rule "Class op foldl" for ‘foldl’ might fire first
    Probable fix: add phase [n] or [~n] to the competing rule

Crypto/Hash/SHA3.hs:62:11: warning: [-Winline-rule-shadowing]
    Rule "hashlazy" may never fire
      because ‘L.toChunks’ might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for ‘L.toChunks’
[11 of 21] Compiling Crypto.Hash.SHA512 ( Crypto/Hash/SHA512.hs, .stack-work/dist/x86_64-linux/Cabal-1.24.0.0_ghcjs/build/Crypto/Hash/SHA512.js_o )

Crypto/Hash/SHA512.hs:51:11: warning: [-Winline-rule-shadowing]
    Rule "digestSize" may never fire
      because ‘B.length’ might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for ‘B.length’

Crypto/Hash/SHA512.hs:54:11: warning: [-Winline-rule-shadowing]
    Rule "hashmany" may never fire
      because rule "Class op foldl" for ‘foldl’ might fire first
    Probable fix: add phase [n] or [~n] to the competing rule

Crypto/Hash/SHA512.hs:55:11: warning: [-Winline-rule-shadowing]
    Rule "hashlazy" may never fire because ‘$’ might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for ‘$’

Crypto/Hash/SHA512.hs:55:11: warning: [-Winline-rule-shadowing]
    Rule "hashlazy" may never fire
      because rule "Class op foldl" for ‘foldl’ might fire first
    Probable fix: add phase [n] or [~n] to the competing rule

Crypto/Hash/SHA512.hs:55:11: warning: [-Winline-rule-shadowing]
    Rule "hashlazy" may never fire
      because ‘L.toChunks’ might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for ‘L.toChunks’
[12 of 21] Compiling Crypto.Hash.SHA512t ( Crypto/Hash/SHA512t.hs, .stack-work/dist/x86_64-linux/Cabal-1.24.0.0_ghcjs/build/Crypto/Hash/SHA512t.js_o )

on the commandline: warning: [-Wtrustworthy-safe]
    ‘Crypto.Hash.SHA512t’ is marked as Trustworthy but has been inferred as safe!
[13 of 21] Compiling Crypto.Hash.SHA384 ( Crypto/Hash/SHA384.hs, .stack-work/dist/x86_64-linux/Cabal-1.24.0.0_ghcjs/build/Crypto/Hash/SHA384.js_o )
[14 of 21] Compiling Crypto.Hash.SHA256 ( Crypto/Hash/SHA256.hs, .stack-work/dist/x86_64-linux/Cabal-1.24.0.0_ghcjs/build/Crypto/Hash/SHA256.js_o )
[15 of 21] Compiling Crypto.Hash.SHA224 ( Crypto/Hash/SHA224.hs, .stack-work/dist/x86_64-linux/Cabal-1.24.0.0_ghcjs/build/Crypto/Hash/SHA224.js_o )
[16 of 21] Compiling Crypto.Hash.SHA1 ( Crypto/Hash/SHA1.hs, .stack-work/dist/x86_64-linux/Cabal-1.24.0.0_ghcjs/build/Crypto/Hash/SHA1.js_o )
[17 of 21] Compiling Crypto.Hash.Types ( Crypto/Hash/Types.hs, .stack-work/dist/x86_64-linux/Cabal-1.24.0.0_ghcjs/build/Crypto/Hash/Types.js_o )
[18 of 21] Compiling Crypto.Hash      ( Crypto/Hash.hs, .stack-work/dist/x86_64-linux/Cabal-1.24.0.0_ghcjs/build/Crypto/Hash.js_o )
[19 of 21] Compiling Crypto.MAC       ( Crypto/MAC.hs, .stack-work/dist/x86_64-linux/Cabal-1.24.0.0_ghcjs/build/Crypto/MAC.js_o )
[20 of 21] Compiling Crypto.MAC.SHA3  ( Crypto/MAC/SHA3.hs, .stack-work/dist/x86_64-linux/Cabal-1.24.0.0_ghcjs/build/Crypto/MAC/SHA3.js_o )
[21 of 21] Compiling Crypto.MAC.HMAC  ( Crypto/MAC/HMAC.hs, .stack-work/dist/x86_64-linux/Cabal-1.24.0.0_ghcjs/build/Crypto/MAC/HMAC.js_o )

on the commandline: warning: [-Wtrustworthy-safe]
    ‘Crypto.MAC.HMAC’ is marked as Trustworthy but has been inferred as safe!
Installing library in
/home/saaffa/.stack/snapshots/x86_64-linux/lts-7.1/ghcjs-0.2.1.9007001_ghc-8.0.1/lib/x86_64-linux-ghcjs-0.2.1.9007001-ghc8_0_1/cryptohash-0.11.9-63138JVnVuvCCxPRrKZnLK
Registering cryptohash-0.11.9...
